// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject12
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CreatFlure - Используйте "CreatFlureParams" для передачи параметров в этот метод.
        /// </summary>
        public void CreatFlure()
        {
            #region Variable Declarations
            WinButton uIФлюорографияButton = this.UIКвазарЖурналфлюорогрWindow.UI_pluginContainerWindow.UIФлюорографияButton;
            WinButton uIФлюорообследованиеButton = this.UIКвазарЖурналфлюорогрWindow.UIMedSoftFluorographyWindow.UIФлюорообследованиеButton;
            WinButton uIItemButton = this.UIКвазарЖурналфлюорогрWindow.UIФлюорообследованиеWindow.UI_policyNumberWindow.UIItemButton;
            WinCustom uIItemCustom = this.UIПоискфизическоголицаWindow.UI_lastNameWindow.UIItemCustom;
            WinEdit uI_lastName_EmbeddableEdit = this.UIПоискфизическоголицаWindow.UI_lastName_EmbeddableWindow.UI_lastName_EmbeddableEdit;
            WinCustom uIItemCustom1 = this.UIПоискфизическоголицаWindow.UI_firstNameWindow.UIItemCustom;
            WinEdit uI_firstName_EmbeddablEdit = this.UIПоискфизическоголицаWindow.UI_firstName_EmbeddablWindow.UI_firstName_EmbeddablEdit;
            WinCheckBox uIВбазеФОМСCheckBox1 = this.UIПоискфизическоголицаWindow.UIВбазеФОМСCheckBox.UIВбазеФОМСCheckBox1;
            WinButton uIИскатьButton = this.UIПоискфизическоголицаWindow.UIИскатьWindow.UIИскатьButton;
            WinCell uIМоревРусланЕвгеньевиCell = this.UIПоискфизическоголицаWindow.UIФизическиелицаTable.UIФизическиелицаrow1Row.UIМоревРусланЕвгеньевиCell;
            WinButton uIПринятьButton = this.UIПоискфизическоголицаWindow.UIПринятьWindow.UIПринятьButton;
            WinButton uIДАButton = this.UIКвазарWindow1.UIДАWindow.UIДАButton;
            WinCustom uIItemCustom2 = this.UIКвазарЖурналфлюорогрWindow.UIФлюорообследованиеWindow.UINoteTextEditorWindow.UIItemCustom;
            WinEdit uINoteTextEditor_EmbedEdit = this.UIКвазарЖурналфлюорогрWindow.UIФлюорообследованиеWindow.UINoteTextEditor_EmbedWindow.UINoteTextEditor_EmbedEdit;
            WinButton uIПринятьButton1 = this.UIКвазарЖурналфлюорогрWindow.UIФлюорообследованиеWindow.UIПринятьWindow.UIПринятьButton;
            WinButton uIФлюороографическоедоButton = this.UIКвазарЖурналфлюорогрWindow.UIMedSoftFluorographyWindow.UIФлюороографическоедоButton;
            WinButton uIItemButton1 = this.UIКвазарЖурналфлюорогрWindow.UIФлюорографическоедооWindow.UI_policyNumberWindow.UIItemButton;
            WinCustom uIItemCustom3 = this.UIКвазарЖурналфлюорогрWindow.UIФлюорографическоедооWindow.UINoteTextEditorWindow.UIItemCustom;
            WinEdit uINoteTextEditor_EmbedEdit1 = this.UIКвазарЖурналфлюорогрWindow.UIФлюорографическоедооWindow.UINoteTextEditor_EmbedWindow.UINoteTextEditor_EmbedEdit;
            WinButton uIПринятьButton2 = this.UIКвазарЖурналфлюорогрWindow.UIФлюорографическоедооWindow.UIПринятьWindow.UIПринятьButton;
            #endregion

            // Щелкните "Флюорография" кнопка
            Mouse.Click(uIФлюорографияButton, new Point(145, 16));

            // Щелкните "Флюорообследование" кнопка
            Mouse.Click(uIФлюорообследованиеButton, new Point(163, 29));

            // Щелкните кнопка с номером 4 в "_policyNumber" окно
            Mouse.Click(uIItemButton, new Point(22, 9));

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom, new Point(20, 8));

            // Тип "Морев" в "_lastName_EmbeddableTextBox" надпись
            uI_lastName_EmbeddableEdit.Text = this.CreatFlureParams.UI_lastName_EmbeddableEditText;

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom1, new Point(50, 14));

            // Тип "рус" в "_firstName_EmbeddableTextBox" надпись
            uI_firstName_EmbeddablEdit.Text = this.CreatFlureParams.UI_firstName_EmbeddablEditText;

            // Щелкните "В базе ФОМС" флажок
            Mouse.Click(uIВбазеФОМСCheckBox1, new Point(4, 11));

            // Щелкните "Искать" кнопка
            Mouse.Click(uIИскатьButton, new Point(37, 4));

            // Установите флаг, чтобы разрешить продолжить воспроизведение в случае невыполнения необязательных действий. (Например, при сбое действия наведения указателя.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Щелкните "Морев Руслан Евгеньевич" ячейка
            Mouse.Click(uIМоревРусланЕвгеньевиCell, new Point(164, 12));

            // Перезагрузите флаг, чтобы убедиться, что в случае ошибки воспроизведение останавливается.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Щелкните "Принять" кнопка
            Mouse.Click(uIПринятьButton, new Point(43, 9));

            // Щелкните "&Да" кнопка
            Mouse.Click(uIДАButton, new Point(54, 14));

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom2, new Point(74, 10));

            // Тип "Тестовый снимок" в "noteTextEditor_EmbeddableTextBox" надпись
            uINoteTextEditor_EmbedEdit.Text = this.CreatFlureParams.UINoteTextEditor_EmbedEditText;

            // Щелкните "Принять" кнопка
            Mouse.Click(uIПринятьButton1, new Point(25, 7));

            // Щелкните "Флюороографическое дообследование" кнопка
            Mouse.Click(uIФлюороографическоедоButton, new Point(141, 12));

            // Щелкните кнопка с номером 4 в "_policyNumber" окно
            Mouse.Click(uIItemButton1, new Point(18, 8));

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom, new Point(35, 7));

            // Установите флаг, чтобы разрешить продолжить воспроизведение в случае невыполнения необязательных действий. (Например, при сбое действия наведения указателя.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Тип "Морев" в "_lastName_EmbeddableTextBox" надпись
            uI_lastName_EmbeddableEdit.Text = this.CreatFlureParams.UI_lastName_EmbeddableEditText1;

            // Перезагрузите флаг, чтобы убедиться, что в случае ошибки воспроизведение останавливается.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom1, new Point(41, 9));

            // Тип "рус" в "_firstName_EmbeddableTextBox" надпись
            uI_firstName_EmbeddablEdit.Text = this.CreatFlureParams.UI_firstName_EmbeddablEditText1;

            // Щелкните "В базе ФОМС" флажок
            Mouse.Click(uIВбазеФОМСCheckBox1, new Point(8, 8));

            // Щелкните "Искать" кнопка
            Mouse.Click(uIИскатьButton, new Point(92, 5));

            // Установите флаг, чтобы разрешить продолжить воспроизведение в случае невыполнения необязательных действий. (Например, при сбое действия наведения указателя.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Щелкните "Морев Руслан Евгеньевич" ячейка
            Mouse.Click(uIМоревРусланЕвгеньевиCell, new Point(115, 10));

            // Щелкните "Принять" кнопка
            Mouse.Click(uIПринятьButton, new Point(33, 11));

            // Перезагрузите флаг, чтобы убедиться, что в случае ошибки воспроизведение останавливается.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Щелкните "&Да" кнопка
            Mouse.Click(uIДАButton, new Point(29, 12));

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom3, new Point(47, 13));

            // Тип "Норма" в "noteTextEditor_EmbeddableTextBox" надпись
            uINoteTextEditor_EmbedEdit1.Text = this.CreatFlureParams.UINoteTextEditor_EmbedEditText1;

            // Щелкните "Принять" кнопка
            Mouse.Click(uIПринятьButton2, new Point(59, 23));
        }
        
        #region Properties
        public virtual CreatFlureParams CreatFlureParams
        {
            get
            {
                if ((this.mCreatFlureParams == null))
                {
                    this.mCreatFlureParams = new CreatFlureParams();
                }
                return this.mCreatFlureParams;
            }
        }
        
        public UIКвазарЖурналфлюорогрWindow UIКвазарЖурналфлюорогрWindow
        {
            get
            {
                if ((this.mUIКвазарЖурналфлюорогрWindow == null))
                {
                    this.mUIКвазарЖурналфлюорогрWindow = new UIКвазарЖурналфлюорогрWindow();
                }
                return this.mUIКвазарЖурналфлюорогрWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIПоискфизическоголицаWindow UIПоискфизическоголицаWindow
        {
            get
            {
                if ((this.mUIПоискфизическоголицаWindow == null))
                {
                    this.mUIПоискфизическоголицаWindow = new UIПоискфизическоголицаWindow();
                }
                return this.mUIПоискфизическоголицаWindow;
            }
        }
        
        public UIКвазарWindow1 UIКвазарWindow1
        {
            get
            {
                if ((this.mUIКвазарWindow1 == null))
                {
                    this.mUIКвазарWindow1 = new UIКвазарWindow1();
                }
                return this.mUIКвазарWindow1;
            }
        }
        #endregion
        
        #region Fields
        private CreatFlureParams mCreatFlureParams;
        
        private UIКвазарЖурналфлюорогрWindow mUIКвазарЖурналфлюорогрWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIПоискфизическоголицаWindow mUIПоискфизическоголицаWindow;
        
        private UIКвазарWindow1 mUIКвазарWindow1;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "CreatFlure"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class CreatFlureParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Морев" в "_lastName_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_lastName_EmbeddableEditText = "Морев";
        
        /// <summary>
        /// Тип "рус" в "_firstName_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_firstName_EmbeddablEditText = "рус";
        
        /// <summary>
        /// Тип "Тестовый снимок" в "noteTextEditor_EmbeddableTextBox" надпись
        /// </summary>
        public string UINoteTextEditor_EmbedEditText = "Тестовый снимок";
        
        /// <summary>
        /// Тип "Морев" в "_lastName_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_lastName_EmbeddableEditText1 = "Морев";
        
        /// <summary>
        /// Тип "рус" в "_firstName_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_firstName_EmbeddablEditText1 = "рус";
        
        /// <summary>
        /// Тип "Норма" в "noteTextEditor_EmbeddableTextBox" надпись
        /// </summary>
        public string UINoteTextEditor_EmbedEditText1 = "Норма";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКвазарЖурналфлюорогрWindow : WinWindow
    {
        
        public UIКвазарЖурналфлюорогрWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Квазар - Журнал флюорографических обследований";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            this.WindowTitles.Add("Квазар");
            this.WindowTitles.Add("Квазар - Флюорообследование");
            this.WindowTitles.Add("Квазар - Флюорографическое дообследование");
            #endregion
        }
        
        #region Properties
        public UIЖурналфлюорографичесWindow UIЖурналфлюорографичесWindow
        {
            get
            {
                if ((this.mUIЖурналфлюорографичесWindow == null))
                {
                    this.mUIЖурналфлюорографичесWindow = new UIЖурналфлюорографичесWindow(this);
                }
                return this.mUIЖурналфлюорографичесWindow;
            }
        }
        
        public UI_pluginContainerWindow UI_pluginContainerWindow
        {
            get
            {
                if ((this.mUI_pluginContainerWindow == null))
                {
                    this.mUI_pluginContainerWindow = new UI_pluginContainerWindow(this);
                }
                return this.mUI_pluginContainerWindow;
            }
        }
        
        public UIMedSoftRegistriesWindow UIMedSoftRegistriesWindow
        {
            get
            {
                if ((this.mUIMedSoftRegistriesWindow == null))
                {
                    this.mUIMedSoftRegistriesWindow = new UIMedSoftRegistriesWindow(this);
                }
                return this.mUIMedSoftRegistriesWindow;
            }
        }
        
        public UIMedSoftFluorographyWindow UIMedSoftFluorographyWindow
        {
            get
            {
                if ((this.mUIMedSoftFluorographyWindow == null))
                {
                    this.mUIMedSoftFluorographyWindow = new UIMedSoftFluorographyWindow(this);
                }
                return this.mUIMedSoftFluorographyWindow;
            }
        }
        
        public UIФлюорообследованиеWindow UIФлюорообследованиеWindow
        {
            get
            {
                if ((this.mUIФлюорообследованиеWindow == null))
                {
                    this.mUIФлюорообследованиеWindow = new UIФлюорообследованиеWindow(this);
                }
                return this.mUIФлюорообследованиеWindow;
            }
        }
        
        public UIФлюорографическоедооWindow UIФлюорографическоедооWindow
        {
            get
            {
                if ((this.mUIФлюорографическоедооWindow == null))
                {
                    this.mUIФлюорографическоедооWindow = new UIФлюорографическоедооWindow(this);
                }
                return this.mUIФлюорографическоедооWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIЖурналфлюорографичесWindow mUIЖурналфлюорографичесWindow;
        
        private UI_pluginContainerWindow mUI_pluginContainerWindow;
        
        private UIMedSoftRegistriesWindow mUIMedSoftRegistriesWindow;
        
        private UIMedSoftFluorographyWindow mUIMedSoftFluorographyWindow;
        
        private UIФлюорообследованиеWindow mUIФлюорообследованиеWindow;
        
        private UIФлюорографическоедооWindow mUIФлюорографическоедооWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIЖурналфлюорографичесWindow : WinWindow
    {
        
        public UIЖурналфлюорографичесWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Inspections";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UI_beginDateWindow UI_beginDateWindow
        {
            get
            {
                if ((this.mUI_beginDateWindow == null))
                {
                    this.mUI_beginDateWindow = new UI_beginDateWindow(this);
                }
                return this.mUI_beginDateWindow;
            }
        }
        
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        
        public UI_endDateWindow UI_endDateWindow
        {
            get
            {
                if ((this.mUI_endDateWindow == null))
                {
                    this.mUI_endDateWindow = new UI_endDateWindow(this);
                }
                return this.mUI_endDateWindow;
            }
        }
        
        public UIItemComboBox1 UIItemComboBox1
        {
            get
            {
                if ((this.mUIItemComboBox1 == null))
                {
                    this.mUIItemComboBox1 = new UIItemComboBox1(this);
                }
                return this.mUIItemComboBox1;
            }
        }
        
        public UIПопривязкепациентовкWindow UIПопривязкепациентовкWindow
        {
            get
            {
                if ((this.mUIПопривязкепациентовкWindow == null))
                {
                    this.mUIПопривязкепациентовкWindow = new UIПопривязкепациентовкWindow(this);
                }
                return this.mUIПопривязкепациентовкWindow;
            }
        }
        
        public UIFilterCombo_EmbeddabWindow UIFilterCombo_EmbeddabWindow
        {
            get
            {
                if ((this.mUIFilterCombo_EmbeddabWindow == null))
                {
                    this.mUIFilterCombo_EmbeddabWindow = new UIFilterCombo_EmbeddabWindow(this);
                }
                return this.mUIFilterCombo_EmbeddabWindow;
            }
        }
        
        public UIВсеWindow UIВсеWindow
        {
            get
            {
                if ((this.mUIВсеWindow == null))
                {
                    this.mUIВсеWindow = new UIВсеWindow(this);
                }
                return this.mUIВсеWindow;
            }
        }
        
        public UI_conditionCombo_EmbeWindow UI_conditionCombo_EmbeWindow
        {
            get
            {
                if ((this.mUI_conditionCombo_EmbeWindow == null))
                {
                    this.mUI_conditionCombo_EmbeWindow = new UI_conditionCombo_EmbeWindow(this);
                }
                return this.mUI_conditionCombo_EmbeWindow;
            }
        }
        
        public UIПолучитьданныеWindow UIПолучитьданныеWindow
        {
            get
            {
                if ((this.mUIПолучитьданныеWindow == null))
                {
                    this.mUIПолучитьданныеWindow = new UIПолучитьданныеWindow(this);
                }
                return this.mUIПолучитьданныеWindow;
            }
        }
        
        public UI_registryGridClient UI_registryGridClient
        {
            get
            {
                if ((this.mUI_registryGridClient == null))
                {
                    this.mUI_registryGridClient = new UI_registryGridClient(this);
                }
                return this.mUI_registryGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_beginDateWindow mUI_beginDateWindow;
        
        private UIItemComboBox mUIItemComboBox;
        
        private UI_endDateWindow mUI_endDateWindow;
        
        private UIItemComboBox1 mUIItemComboBox1;
        
        private UIПопривязкепациентовкWindow mUIПопривязкепациентовкWindow;
        
        private UIFilterCombo_EmbeddabWindow mUIFilterCombo_EmbeddabWindow;
        
        private UIВсеWindow mUIВсеWindow;
        
        private UI_conditionCombo_EmbeWindow mUI_conditionCombo_EmbeWindow;
        
        private UIПолучитьданныеWindow mUIПолучитьданныеWindow;
        
        private UI_registryGridClient mUI_registryGridClient;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_beginDateWindow : WinWindow
    {
        
        public UI_beginDateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_beginDate";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI_beginDateComboBox
        {
            get
            {
                if ((this.mUI_beginDateComboBox == null))
                {
                    this.mUI_beginDateComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUI_beginDateComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_beginDateComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI_beginDateComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_beginDateEdit
        {
            get
            {
                if ((this.mUI_beginDateEdit == null))
                {
                    this.mUI_beginDateEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_beginDateEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_beginDateEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_beginDateEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_beginDateEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_endDateWindow : WinWindow
    {
        
        public UI_endDateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_endDate";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI_endDateComboBox
        {
            get
            {
                if ((this.mUI_endDateComboBox == null))
                {
                    this.mUI_endDateComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUI_endDateComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_endDateComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI_endDateComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemComboBox1 : WinComboBox
    {
        
        public UIItemComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_endDateEdit
        {
            get
            {
                if ((this.mUI_endDateEdit == null))
                {
                    this.mUI_endDateEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_endDateEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_endDateEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_endDateEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_endDateEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПопривязкепациентовкWindow : WinWindow
    {
        
        public UIПопривязкепациентовкWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "filterCombo";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIПопривязкепациентовкComboBox
        {
            get
            {
                if ((this.mUIПопривязкепациентовкComboBox == null))
                {
                    this.mUIПопривязкепациентовкComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIПопривязкепациентовкComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "По привязке пациентов к медицинским участкам";
                    this.mUIПопривязкепациентовкComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIПопривязкепациентовкComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIПопривязкепациентовкComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIFilterCombo_EmbeddabWindow : WinWindow
    {
        
        public UIFilterCombo_EmbeddabWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "filterCombo_EmbeddableTextBox";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilterCombo_EmbeddabEdit
        {
            get
            {
                if ((this.mUIFilterCombo_EmbeddabEdit == null))
                {
                    this.mUIFilterCombo_EmbeddabEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIFilterCombo_EmbeddabEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIFilterCombo_EmbeddabEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilterCombo_EmbeddabEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВсеWindow : WinWindow
    {
        
        public UIВсеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_conditionCombo";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIВсеComboBox
        {
            get
            {
                if ((this.mUIВсеComboBox == null))
                {
                    this.mUIВсеComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIВсеComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Все";
                    this.mUIВсеComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIВсеComboBox;
            }
        }
        
        public WinComboBox UIТолькопрошедшиеComboBox
        {
            get
            {
                if ((this.mUIТолькопрошедшиеComboBox == null))
                {
                    this.mUIТолькопрошедшиеComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIТолькопрошедшиеComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Только прошедшие";
                    this.mUIТолькопрошедшиеComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIТолькопрошедшиеComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIВсеComboBox;
        
        private WinComboBox mUIТолькопрошедшиеComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_conditionCombo_EmbeWindow : WinWindow
    {
        
        public UI_conditionCombo_EmbeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_conditionCombo_EmbeddableTextBox";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_conditionCombo_EmbeEdit
        {
            get
            {
                if ((this.mUI_conditionCombo_EmbeEdit == null))
                {
                    this.mUI_conditionCombo_EmbeEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_conditionCombo_EmbeEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_conditionCombo_EmbeEdit;
            }
        }
        
        public WinEdit UI_conditionCombo_EmbeEdit1
        {
            get
            {
                if ((this.mUI_conditionCombo_EmbeEdit1 == null))
                {
                    this.mUI_conditionCombo_EmbeEdit1 = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_conditionCombo_EmbeEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Все";
                    this.mUI_conditionCombo_EmbeEdit1.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_conditionCombo_EmbeEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_conditionCombo_EmbeEdit;
        
        private WinEdit mUI_conditionCombo_EmbeEdit1;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПолучитьданныеWindow : WinWindow
    {
        
        public UIПолучитьданныеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_getData";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinButton UIПолучитьданныеButton
        {
            get
            {
                if ((this.mUIПолучитьданныеButton == null))
                {
                    this.mUIПолучитьданныеButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПолучитьданныеButton.SearchProperties[WinButton.PropertyNames.Name] = "Получить данные";
                    this.mUIПолучитьданныеButton.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIПолучитьданныеButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПолучитьданныеButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_registryGridClient : WinClient
    {
        
        public UI_registryGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "_registryGrid";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UIResultTableTable UIResultTableTable
        {
            get
            {
                if ((this.mUIResultTableTable == null))
                {
                    this.mUIResultTableTable = new UIResultTableTable(this);
                }
                return this.mUIResultTableTable;
            }
        }
        #endregion
        
        #region Fields
        private UIResultTableTable mUIResultTableTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIResultTableTable : WinTable
    {
        
        public UIResultTableTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "ResultTable";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UIResultTableстрока7Row UIResultTableстрока7Row
        {
            get
            {
                if ((this.mUIResultTableстрока7Row == null))
                {
                    this.mUIResultTableстрока7Row = new UIResultTableстрока7Row(this);
                }
                return this.mUIResultTableстрока7Row;
            }
        }
        #endregion
        
        #region Fields
        private UIResultTableстрока7Row mUIResultTableстрока7Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIResultTableстрока7Row : WinRow
    {
        
        public UIResultTableстрока7Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Name] = "ResultTable строка 7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinCell UIМоревРусланЕвгеньевиCell
        {
            get
            {
                if ((this.mUIМоревРусланЕвгеньевиCell == null))
                {
                    this.mUIМоревРусланЕвгеньевиCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIМоревРусланЕвгеньевиCell.SearchProperties[WinCell.PropertyNames.Value] = "Морев Руслан Евгеньевич";
                    this.mUIМоревРусланЕвгеньевиCell.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIМоревРусланЕвгеньевиCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIМоревРусланЕвгеньевиCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_pluginContainerWindow : WinWindow
    {
        
        public UI_pluginContainerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_pluginContainer";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIЖурналыButton
        {
            get
            {
                if ((this.mUIЖурналыButton == null))
                {
                    this.mUIЖурналыButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЖурналыButton.SearchProperties[WinButton.PropertyNames.Name] = "Журналы";
                    this.mUIЖурналыButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIЖурналыButton;
            }
        }
        
        public WinButton UISplitterBarButton
        {
            get
            {
                if ((this.mUISplitterBarButton == null))
                {
                    this.mUISplitterBarButton = new WinButton(this);
                    #region Условия поиска
                    this.mUISplitterBarButton.SearchProperties[WinButton.PropertyNames.Name] = "Splitter Bar";
                    this.mUISplitterBarButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUISplitterBarButton;
            }
        }
        
        public WinButton UIСистемаправButton
        {
            get
            {
                if ((this.mUIСистемаправButton == null))
                {
                    this.mUIСистемаправButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСистемаправButton.SearchProperties[WinButton.PropertyNames.Name] = "Система прав";
                    this.mUIСистемаправButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIСистемаправButton;
            }
        }
        
        public WinButton UIФлюорографияButton
        {
            get
            {
                if ((this.mUIФлюорографияButton == null))
                {
                    this.mUIФлюорографияButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIФлюорографияButton.SearchProperties[WinButton.PropertyNames.Name] = "Флюорография";
                    this.mUIФлюорографияButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIФлюорографияButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЖурналыButton;
        
        private WinButton mUISplitterBarButton;
        
        private WinButton mUIСистемаправButton;
        
        private WinButton mUIФлюорографияButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIMedSoftRegistriesWindow : WinWindow
    {
        
        public UIMedSoftRegistriesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MedSoft.Registries";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIОбследованияButton
        {
            get
            {
                if ((this.mUIОбследованияButton == null))
                {
                    this.mUIОбследованияButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОбследованияButton.SearchProperties[WinButton.PropertyNames.Name] = "Обследования";
                    this.mUIОбследованияButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIОбследованияButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОбследованияButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIMedSoftFluorographyWindow : WinWindow
    {
        
        public UIMedSoftFluorographyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MedSoft.Fluorography";
            this.WindowTitles.Add("Квазар");
            this.WindowTitles.Add("Квазар - Флюорообследование");
            #endregion
        }
        
        #region Properties
        public WinButton UIФлюорообследованиеButton
        {
            get
            {
                if ((this.mUIФлюорообследованиеButton == null))
                {
                    this.mUIФлюорообследованиеButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIФлюорообследованиеButton.SearchProperties[WinButton.PropertyNames.Name] = "Флюорообследование";
                    this.mUIФлюорообследованиеButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIФлюорообследованиеButton;
            }
        }
        
        public WinButton UIФлюороографическоедоButton
        {
            get
            {
                if ((this.mUIФлюороографическоедоButton == null))
                {
                    this.mUIФлюороографическоедоButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIФлюороографическоедоButton.SearchProperties[WinButton.PropertyNames.Name] = "Флюороографическое дообследование";
                    this.mUIФлюороографическоедоButton.WindowTitles.Add("Квазар - Флюорообследование");
                    #endregion
                }
                return this.mUIФлюороографическоедоButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIФлюорообследованиеButton;
        
        private WinButton mUIФлюороографическоедоButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIФлюорообследованиеWindow : WinWindow
    {
        
        public UIФлюорообследованиеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "InspectionConduct";
            this.WindowTitles.Add("Квазар - Флюорообследование");
            #endregion
        }
        
        #region Properties
        public UI_policyNumberWindow UI_policyNumberWindow
        {
            get
            {
                if ((this.mUI_policyNumberWindow == null))
                {
                    this.mUI_policyNumberWindow = new UI_policyNumberWindow(this);
                }
                return this.mUI_policyNumberWindow;
            }
        }
        
        public UINoteTextEditorWindow UINoteTextEditorWindow
        {
            get
            {
                if ((this.mUINoteTextEditorWindow == null))
                {
                    this.mUINoteTextEditorWindow = new UINoteTextEditorWindow(this);
                }
                return this.mUINoteTextEditorWindow;
            }
        }
        
        public UINoteTextEditor_EmbedWindow UINoteTextEditor_EmbedWindow
        {
            get
            {
                if ((this.mUINoteTextEditor_EmbedWindow == null))
                {
                    this.mUINoteTextEditor_EmbedWindow = new UINoteTextEditor_EmbedWindow(this);
                }
                return this.mUINoteTextEditor_EmbedWindow;
            }
        }
        
        public UIПринятьWindow UIПринятьWindow
        {
            get
            {
                if ((this.mUIПринятьWindow == null))
                {
                    this.mUIПринятьWindow = new UIПринятьWindow(this);
                }
                return this.mUIПринятьWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_policyNumberWindow mUI_policyNumberWindow;
        
        private UINoteTextEditorWindow mUINoteTextEditorWindow;
        
        private UINoteTextEditor_EmbedWindow mUINoteTextEditor_EmbedWindow;
        
        private UIПринятьWindow mUIПринятьWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_policyNumberWindow : WinWindow
    {
        
        public UI_policyNumberWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_policyNumber";
            this.WindowTitles.Add("Квазар - Флюорообследование");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Instance] = "4";
                    this.mUIItemButton.WindowTitles.Add("Квазар - Флюорообследование");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UINoteTextEditorWindow : WinWindow
    {
        
        public UINoteTextEditorWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "noteTextEditor";
            this.WindowTitles.Add("Квазар - Флюорообследование");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add("Квазар - Флюорообследование");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UINoteTextEditor_EmbedWindow : WinWindow
    {
        
        public UINoteTextEditor_EmbedWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "noteTextEditor_EmbeddableTextBox";
            this.WindowTitles.Add("Квазар - Флюорообследование");
            #endregion
        }
        
        #region Properties
        public WinEdit UINoteTextEditor_EmbedEdit
        {
            get
            {
                if ((this.mUINoteTextEditor_EmbedEdit == null))
                {
                    this.mUINoteTextEditor_EmbedEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUINoteTextEditor_EmbedEdit.WindowTitles.Add("Квазар - Флюорообследование");
                    #endregion
                }
                return this.mUINoteTextEditor_EmbedEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINoteTextEditor_EmbedEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПринятьWindow : WinWindow
    {
        
        public UIПринятьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_accept";
            this.WindowTitles.Add("Квазар - Флюорообследование");
            #endregion
        }
        
        #region Properties
        public WinButton UIПринятьButton
        {
            get
            {
                if ((this.mUIПринятьButton == null))
                {
                    this.mUIПринятьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПринятьButton.SearchProperties[WinButton.PropertyNames.Name] = "Принять";
                    this.mUIПринятьButton.WindowTitles.Add("Квазар - Флюорообследование");
                    #endregion
                }
                return this.mUIПринятьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПринятьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIФлюорографическоедооWindow : WinWindow
    {
        
        public UIФлюорографическоедооWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ReInspectionConduct";
            this.WindowTitles.Add("Квазар - Флюорографическое дообследование");
            #endregion
        }
        
        #region Properties
        public UI_policyNumberWindow1 UI_policyNumberWindow
        {
            get
            {
                if ((this.mUI_policyNumberWindow == null))
                {
                    this.mUI_policyNumberWindow = new UI_policyNumberWindow1(this);
                }
                return this.mUI_policyNumberWindow;
            }
        }
        
        public UINoteTextEditorWindow1 UINoteTextEditorWindow
        {
            get
            {
                if ((this.mUINoteTextEditorWindow == null))
                {
                    this.mUINoteTextEditorWindow = new UINoteTextEditorWindow1(this);
                }
                return this.mUINoteTextEditorWindow;
            }
        }
        
        public UINoteTextEditor_EmbedWindow1 UINoteTextEditor_EmbedWindow
        {
            get
            {
                if ((this.mUINoteTextEditor_EmbedWindow == null))
                {
                    this.mUINoteTextEditor_EmbedWindow = new UINoteTextEditor_EmbedWindow1(this);
                }
                return this.mUINoteTextEditor_EmbedWindow;
            }
        }
        
        public UIПринятьWindow1 UIПринятьWindow
        {
            get
            {
                if ((this.mUIПринятьWindow == null))
                {
                    this.mUIПринятьWindow = new UIПринятьWindow1(this);
                }
                return this.mUIПринятьWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_policyNumberWindow1 mUI_policyNumberWindow;
        
        private UINoteTextEditorWindow1 mUINoteTextEditorWindow;
        
        private UINoteTextEditor_EmbedWindow1 mUINoteTextEditor_EmbedWindow;
        
        private UIПринятьWindow1 mUIПринятьWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_policyNumberWindow1 : WinWindow
    {
        
        public UI_policyNumberWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_policyNumber";
            this.WindowTitles.Add("Квазар - Флюорографическое дообследование");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Instance] = "4";
                    this.mUIItemButton.WindowTitles.Add("Квазар - Флюорографическое дообследование");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UINoteTextEditorWindow1 : WinWindow
    {
        
        public UINoteTextEditorWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "noteTextEditor";
            this.WindowTitles.Add("Квазар - Флюорографическое дообследование");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add("Квазар - Флюорографическое дообследование");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UINoteTextEditor_EmbedWindow1 : WinWindow
    {
        
        public UINoteTextEditor_EmbedWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "noteTextEditor_EmbeddableTextBox";
            this.WindowTitles.Add("Квазар - Флюорографическое дообследование");
            #endregion
        }
        
        #region Properties
        public WinEdit UINoteTextEditor_EmbedEdit
        {
            get
            {
                if ((this.mUINoteTextEditor_EmbedEdit == null))
                {
                    this.mUINoteTextEditor_EmbedEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUINoteTextEditor_EmbedEdit.WindowTitles.Add("Квазар - Флюорографическое дообследование");
                    #endregion
                }
                return this.mUINoteTextEditor_EmbedEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINoteTextEditor_EmbedEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПринятьWindow1 : WinWindow
    {
        
        public UIПринятьWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_accept";
            this.WindowTitles.Add("Квазар - Флюорографическое дообследование");
            #endregion
        }
        
        #region Properties
        public WinButton UIПринятьButton
        {
            get
            {
                if ((this.mUIПринятьButton == null))
                {
                    this.mUIПринятьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПринятьButton.SearchProperties[WinButton.PropertyNames.Name] = "Принять";
                    this.mUIПринятьButton.WindowTitles.Add("Квазар - Флюорографическое дообследование");
                    #endregion
                }
                return this.mUIПринятьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПринятьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = " ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UI_userNameWindow UI_userNameWindow
        {
            get
            {
                if ((this.mUI_userNameWindow == null))
                {
                    this.mUI_userNameWindow = new UI_userNameWindow(this);
                }
                return this.mUI_userNameWindow;
            }
        }
        
        public UI_userName_EmbeddableWindow UI_userName_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_userName_EmbeddableWindow == null))
                {
                    this.mUI_userName_EmbeddableWindow = new UI_userName_EmbeddableWindow(this);
                }
                return this.mUI_userName_EmbeddableWindow;
            }
        }
        
        public UI_passwordWindow UI_passwordWindow
        {
            get
            {
                if ((this.mUI_passwordWindow == null))
                {
                    this.mUI_passwordWindow = new UI_passwordWindow(this);
                }
                return this.mUI_passwordWindow;
            }
        }
        
        public UI_password_EmbeddableWindow UI_password_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_password_EmbeddableWindow == null))
                {
                    this.mUI_password_EmbeddableWindow = new UI_password_EmbeddableWindow(this);
                }
                return this.mUI_password_EmbeddableWindow;
            }
        }
        
        public UIВойтиWindow UIВойтиWindow
        {
            get
            {
                if ((this.mUIВойтиWindow == null))
                {
                    this.mUIВойтиWindow = new UIВойтиWindow(this);
                }
                return this.mUIВойтиWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_userNameWindow mUI_userNameWindow;
        
        private UI_userName_EmbeddableWindow mUI_userName_EmbeddableWindow;
        
        private UI_passwordWindow mUI_passwordWindow;
        
        private UI_password_EmbeddableWindow mUI_password_EmbeddableWindow;
        
        private UIВойтиWindow mUIВойтиWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_userNameWindow : WinWindow
    {
        
        public UI_userNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_userName";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_userName_EmbeddableWindow : WinWindow
    {
        
        public UI_userName_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_userName_EmbeddableTextBox";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_userName_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_userName_EmbeddableEdit == null))
                {
                    this.mUI_userName_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_userName_EmbeddableEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUI_userName_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_userName_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_passwordWindow : WinWindow
    {
        
        public UI_passwordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_password";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_password_EmbeddableWindow : WinWindow
    {
        
        public UI_password_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_password_EmbeddableTextBox";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_password_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_password_EmbeddableEdit == null))
                {
                    this.mUI_password_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_password_EmbeddableEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUI_password_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_password_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВойтиWindow : WinWindow
    {
        
        public UIВойтиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_acceptButton";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinButton UIВойтиButton
        {
            get
            {
                if ((this.mUIВойтиButton == null))
                {
                    this.mUIВойтиButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВойтиButton.SearchProperties[WinButton.PropertyNames.Name] = "Войти";
                    this.mUIВойтиButton.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIВойтиButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВойтиButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПоискфизическоголицаWindow : WinWindow
    {
        
        public UIПоискфизическоголицаWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Поиск физического лица";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public UI_lastNameWindow UI_lastNameWindow
        {
            get
            {
                if ((this.mUI_lastNameWindow == null))
                {
                    this.mUI_lastNameWindow = new UI_lastNameWindow(this);
                }
                return this.mUI_lastNameWindow;
            }
        }
        
        public UI_lastName_EmbeddableWindow UI_lastName_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_lastName_EmbeddableWindow == null))
                {
                    this.mUI_lastName_EmbeddableWindow = new UI_lastName_EmbeddableWindow(this);
                }
                return this.mUI_lastName_EmbeddableWindow;
            }
        }
        
        public UI_firstNameWindow UI_firstNameWindow
        {
            get
            {
                if ((this.mUI_firstNameWindow == null))
                {
                    this.mUI_firstNameWindow = new UI_firstNameWindow(this);
                }
                return this.mUI_firstNameWindow;
            }
        }
        
        public UI_firstName_EmbeddablWindow UI_firstName_EmbeddablWindow
        {
            get
            {
                if ((this.mUI_firstName_EmbeddablWindow == null))
                {
                    this.mUI_firstName_EmbeddablWindow = new UI_firstName_EmbeddablWindow(this);
                }
                return this.mUI_firstName_EmbeddablWindow;
            }
        }
        
        public UIВбазеФОМСCheckBox UIВбазеФОМСCheckBox
        {
            get
            {
                if ((this.mUIВбазеФОМСCheckBox == null))
                {
                    this.mUIВбазеФОМСCheckBox = new UIВбазеФОМСCheckBox(this);
                }
                return this.mUIВбазеФОМСCheckBox;
            }
        }
        
        public UIИскатьWindow UIИскатьWindow
        {
            get
            {
                if ((this.mUIИскатьWindow == null))
                {
                    this.mUIИскатьWindow = new UIИскатьWindow(this);
                }
                return this.mUIИскатьWindow;
            }
        }
        
        public UIФизическиелицаTable UIФизическиелицаTable
        {
            get
            {
                if ((this.mUIФизическиелицаTable == null))
                {
                    this.mUIФизическиелицаTable = new UIФизическиелицаTable(this);
                }
                return this.mUIФизическиелицаTable;
            }
        }
        
        public UIПринятьWindow2 UIПринятьWindow
        {
            get
            {
                if ((this.mUIПринятьWindow == null))
                {
                    this.mUIПринятьWindow = new UIПринятьWindow2(this);
                }
                return this.mUIПринятьWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_lastNameWindow mUI_lastNameWindow;
        
        private UI_lastName_EmbeddableWindow mUI_lastName_EmbeddableWindow;
        
        private UI_firstNameWindow mUI_firstNameWindow;
        
        private UI_firstName_EmbeddablWindow mUI_firstName_EmbeddablWindow;
        
        private UIВбазеФОМСCheckBox mUIВбазеФОМСCheckBox;
        
        private UIИскатьWindow mUIИскатьWindow;
        
        private UIФизическиелицаTable mUIФизическиелицаTable;
        
        private UIПринятьWindow2 mUIПринятьWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_lastNameWindow : WinWindow
    {
        
        public UI_lastNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_lastName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_lastName_EmbeddableWindow : WinWindow
    {
        
        public UI_lastName_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ControlName, "_lastName_EmbeddableTextBox", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_lastName_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_lastName_EmbeddableEdit == null))
                {
                    this.mUI_lastName_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_lastName_EmbeddableEdit.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUI_lastName_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_lastName_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_firstNameWindow : WinWindow
    {
        
        public UI_firstNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_firstName";
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_firstName_EmbeddablWindow : WinWindow
    {
        
        public UI_firstName_EmbeddablWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_firstName_EmbeddableTextBox";
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_firstName_EmbeddablEdit
        {
            get
            {
                if ((this.mUI_firstName_EmbeddablEdit == null))
                {
                    this.mUI_firstName_EmbeddablEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_firstName_EmbeddablEdit.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUI_firstName_EmbeddablEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_firstName_EmbeddablEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВбазеФОМСCheckBox : WinCheckBox
    {
        
        public UIВбазеФОМСCheckBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinCheckBox.PropertyNames.Name] = "В базе ФОМС";
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIВбазеФОМСCheckBox1
        {
            get
            {
                if ((this.mUIВбазеФОМСCheckBox1 == null))
                {
                    this.mUIВбазеФОМСCheckBox1 = new WinCheckBox(this);
                    #region Условия поиска
                    this.mUIВбазеФОМСCheckBox1.SearchProperties[WinCheckBox.PropertyNames.Name] = "В базе ФОМС";
                    this.mUIВбазеФОМСCheckBox1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIВбазеФОМСCheckBox1.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUIВбазеФОМСCheckBox1;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIВбазеФОМСCheckBox1;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIИскатьWindow : WinWindow
    {
        
        public UIИскатьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_search";
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinButton UIИскатьButton
        {
            get
            {
                if ((this.mUIИскатьButton == null))
                {
                    this.mUIИскатьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIИскатьButton.SearchProperties[WinButton.PropertyNames.Name] = "Искать";
                    this.mUIИскатьButton.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUIИскатьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIИскатьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIФизическиелицаTable : WinTable
    {
        
        public UIФизическиелицаTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties.Add(new PropertyExpression(WinTable.PropertyNames.Name, "Физические лица", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public UIФизическиелицаrow1Row UIФизическиелицаrow1Row
        {
            get
            {
                if ((this.mUIФизическиелицаrow1Row == null))
                {
                    this.mUIФизическиелицаrow1Row = new UIФизическиелицаrow1Row(this);
                }
                return this.mUIФизическиелицаrow1Row;
            }
        }
        #endregion
        
        #region Fields
        private UIФизическиелицаrow1Row mUIФизическиелицаrow1Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIФизическиелицаrow1Row : WinRow
    {
        
        public UIФизическиелицаrow1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Name] = "Физические лица row 1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinCell UIМоревРусланЕвгеньевиCell
        {
            get
            {
                if ((this.mUIМоревРусланЕвгеньевиCell == null))
                {
                    this.mUIМоревРусланЕвгеньевиCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIМоревРусланЕвгеньевиCell.SearchProperties[WinCell.PropertyNames.Value] = "Морев Руслан Евгеньевич";
                    this.mUIМоревРусланЕвгеньевиCell.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUIМоревРусланЕвгеньевиCell.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
                    this.mUIМоревРусланЕвгеньевиCell.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUIМоревРусланЕвгеньевиCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIМоревРусланЕвгеньевиCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПринятьWindow2 : WinWindow
    {
        
        public UIПринятьWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_accept";
            this.WindowTitles.Add("Поиск физического лица");
            #endregion
        }
        
        #region Properties
        public WinButton UIПринятьButton
        {
            get
            {
                if ((this.mUIПринятьButton == null))
                {
                    this.mUIПринятьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПринятьButton.SearchProperties[WinButton.PropertyNames.Name] = "Принять";
                    this.mUIПринятьButton.WindowTitles.Add("Поиск физического лица");
                    #endregion
                }
                return this.mUIПринятьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПринятьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКвазарWindow1 : WinWindow
    {
        
        public UIКвазарWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Квазар";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UIДАWindow UIДАWindow
        {
            get
            {
                if ((this.mUIДАWindow == null))
                {
                    this.mUIДАWindow = new UIДАWindow(this);
                }
                return this.mUIДАWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIДАWindow mUIДАWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДАWindow : WinWindow
    {
        
        public UIДАWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIДАButton
        {
            get
            {
                if ((this.mUIДАButton == null))
                {
                    this.mUIДАButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДАButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mUIДАButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIДАButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДАButton;
        #endregion
    }
}
