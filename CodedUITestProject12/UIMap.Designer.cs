// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject12
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Используйте "AssertMethod1ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinCell uIМоревРусланЕвгеньевиCell = this.UIКвазарЖурналфлюорогрWindow.UIЖурналфлюорографичесWindow.UI_registryGridClient.UIResultTableTable.UIResultTableстрока7Row.UIМоревРусланЕвгеньевиCell;
            WinRow uIResultTableстрока7Row = this.UIКвазарЖурналфлюорогрWindow.UIЖурналфлюорографичесWindow.UI_registryGridClient.UIResultTableTable.UIResultTableстрока7Row;
            #endregion

            // Убедитесь, что свойство Value "Морев Руслан Евгеньевич" ячейка равняется "Морев Руслан Евгеньевич"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIМоревРусланЕвгеньевиCellValue, uIМоревРусланЕвгеньевиCell.Value, "нет морячка");

            // Убедитесь, что свойство Name "ResultTable строка 7" строка равняется "ResultTable строка 7"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIResultTableстрока7RowName, uIResultTableстрока7Row.Name, "не все строки");
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIКвазарЖурналфлюорогрWindow UIКвазарЖурналфлюорогрWindow
        {
            get
            {
                if ((this.mUIКвазарЖурналфлюорогрWindow == null))
                {
                    this.mUIКвазарЖурналфлюорогрWindow = new UIКвазарЖурналфлюорогрWindow();
                }
                return this.mUIКвазарЖурналфлюорогрWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIКвазарЖурналфлюорогрWindow mUIКвазарЖурналфлюорогрWindow;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Value "Морев Руслан Евгеньевич" ячейка равняется "Морев Руслан Евгеньевич"
        /// </summary>
        public string UIМоревРусланЕвгеньевиCellValue = "Морев Руслан Евгеньевич";
        
        /// <summary>
        /// Убедитесь, что свойство Name "ResultTable строка 7" строка равняется "ResultTable строка 7"
        /// </summary>
        public string UIResultTableстрока7RowName = "ResultTable строка 7";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКвазарЖурналфлюорогрWindow : WinWindow
    {
        
        public UIКвазарЖурналфлюорогрWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Квазар - Журнал флюорографических обследований";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UIЖурналфлюорографичесWindow UIЖурналфлюорографичесWindow
        {
            get
            {
                if ((this.mUIЖурналфлюорографичесWindow == null))
                {
                    this.mUIЖурналфлюорографичесWindow = new UIЖурналфлюорографичесWindow(this);
                }
                return this.mUIЖурналфлюорографичесWindow;
            }
        }
        
        public UI_pluginContainerWindow UI_pluginContainerWindow
        {
            get
            {
                if ((this.mUI_pluginContainerWindow == null))
                {
                    this.mUI_pluginContainerWindow = new UI_pluginContainerWindow(this);
                }
                return this.mUI_pluginContainerWindow;
            }
        }
        
        public UIMedSoftRegistriesWindow UIMedSoftRegistriesWindow
        {
            get
            {
                if ((this.mUIMedSoftRegistriesWindow == null))
                {
                    this.mUIMedSoftRegistriesWindow = new UIMedSoftRegistriesWindow(this);
                }
                return this.mUIMedSoftRegistriesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIЖурналфлюорографичесWindow mUIЖурналфлюорографичесWindow;
        
        private UI_pluginContainerWindow mUI_pluginContainerWindow;
        
        private UIMedSoftRegistriesWindow mUIMedSoftRegistriesWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIЖурналфлюорографичесWindow : WinWindow
    {
        
        public UIЖурналфлюорографичесWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Inspections";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UI_beginDateWindow UI_beginDateWindow
        {
            get
            {
                if ((this.mUI_beginDateWindow == null))
                {
                    this.mUI_beginDateWindow = new UI_beginDateWindow(this);
                }
                return this.mUI_beginDateWindow;
            }
        }
        
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        
        public UI_endDateWindow UI_endDateWindow
        {
            get
            {
                if ((this.mUI_endDateWindow == null))
                {
                    this.mUI_endDateWindow = new UI_endDateWindow(this);
                }
                return this.mUI_endDateWindow;
            }
        }
        
        public UIItemComboBox1 UIItemComboBox1
        {
            get
            {
                if ((this.mUIItemComboBox1 == null))
                {
                    this.mUIItemComboBox1 = new UIItemComboBox1(this);
                }
                return this.mUIItemComboBox1;
            }
        }
        
        public UIПопривязкепациентовкWindow UIПопривязкепациентовкWindow
        {
            get
            {
                if ((this.mUIПопривязкепациентовкWindow == null))
                {
                    this.mUIПопривязкепациентовкWindow = new UIПопривязкепациентовкWindow(this);
                }
                return this.mUIПопривязкепациентовкWindow;
            }
        }
        
        public UIFilterCombo_EmbeddabWindow UIFilterCombo_EmbeddabWindow
        {
            get
            {
                if ((this.mUIFilterCombo_EmbeddabWindow == null))
                {
                    this.mUIFilterCombo_EmbeddabWindow = new UIFilterCombo_EmbeddabWindow(this);
                }
                return this.mUIFilterCombo_EmbeddabWindow;
            }
        }
        
        public UIВсеWindow UIВсеWindow
        {
            get
            {
                if ((this.mUIВсеWindow == null))
                {
                    this.mUIВсеWindow = new UIВсеWindow(this);
                }
                return this.mUIВсеWindow;
            }
        }
        
        public UI_conditionCombo_EmbeWindow UI_conditionCombo_EmbeWindow
        {
            get
            {
                if ((this.mUI_conditionCombo_EmbeWindow == null))
                {
                    this.mUI_conditionCombo_EmbeWindow = new UI_conditionCombo_EmbeWindow(this);
                }
                return this.mUI_conditionCombo_EmbeWindow;
            }
        }
        
        public UIПолучитьданныеWindow UIПолучитьданныеWindow
        {
            get
            {
                if ((this.mUIПолучитьданныеWindow == null))
                {
                    this.mUIПолучитьданныеWindow = new UIПолучитьданныеWindow(this);
                }
                return this.mUIПолучитьданныеWindow;
            }
        }
        
        public UI_registryGridClient UI_registryGridClient
        {
            get
            {
                if ((this.mUI_registryGridClient == null))
                {
                    this.mUI_registryGridClient = new UI_registryGridClient(this);
                }
                return this.mUI_registryGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_beginDateWindow mUI_beginDateWindow;
        
        private UIItemComboBox mUIItemComboBox;
        
        private UI_endDateWindow mUI_endDateWindow;
        
        private UIItemComboBox1 mUIItemComboBox1;
        
        private UIПопривязкепациентовкWindow mUIПопривязкепациентовкWindow;
        
        private UIFilterCombo_EmbeddabWindow mUIFilterCombo_EmbeddabWindow;
        
        private UIВсеWindow mUIВсеWindow;
        
        private UI_conditionCombo_EmbeWindow mUI_conditionCombo_EmbeWindow;
        
        private UIПолучитьданныеWindow mUIПолучитьданныеWindow;
        
        private UI_registryGridClient mUI_registryGridClient;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_beginDateWindow : WinWindow
    {
        
        public UI_beginDateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_beginDate";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI_beginDateComboBox
        {
            get
            {
                if ((this.mUI_beginDateComboBox == null))
                {
                    this.mUI_beginDateComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUI_beginDateComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_beginDateComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI_beginDateComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_beginDateEdit
        {
            get
            {
                if ((this.mUI_beginDateEdit == null))
                {
                    this.mUI_beginDateEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_beginDateEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_beginDateEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_beginDateEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_beginDateEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_endDateWindow : WinWindow
    {
        
        public UI_endDateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_endDate";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI_endDateComboBox
        {
            get
            {
                if ((this.mUI_endDateComboBox == null))
                {
                    this.mUI_endDateComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUI_endDateComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_endDateComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI_endDateComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemComboBox1 : WinComboBox
    {
        
        public UIItemComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_endDateEdit
        {
            get
            {
                if ((this.mUI_endDateEdit == null))
                {
                    this.mUI_endDateEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_endDateEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_endDateEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_endDateEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_endDateEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПопривязкепациентовкWindow : WinWindow
    {
        
        public UIПопривязкепациентовкWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "filterCombo";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIПопривязкепациентовкComboBox
        {
            get
            {
                if ((this.mUIПопривязкепациентовкComboBox == null))
                {
                    this.mUIПопривязкепациентовкComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIПопривязкепациентовкComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "По привязке пациентов к медицинским участкам";
                    this.mUIПопривязкепациентовкComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIПопривязкепациентовкComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIПопривязкепациентовкComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIFilterCombo_EmbeddabWindow : WinWindow
    {
        
        public UIFilterCombo_EmbeddabWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "filterCombo_EmbeddableTextBox";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilterCombo_EmbeddabEdit
        {
            get
            {
                if ((this.mUIFilterCombo_EmbeddabEdit == null))
                {
                    this.mUIFilterCombo_EmbeddabEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIFilterCombo_EmbeddabEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIFilterCombo_EmbeddabEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilterCombo_EmbeddabEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВсеWindow : WinWindow
    {
        
        public UIВсеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_conditionCombo";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIВсеComboBox
        {
            get
            {
                if ((this.mUIВсеComboBox == null))
                {
                    this.mUIВсеComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIВсеComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Все";
                    this.mUIВсеComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIВсеComboBox;
            }
        }
        
        public WinComboBox UIТолькопрошедшиеComboBox
        {
            get
            {
                if ((this.mUIТолькопрошедшиеComboBox == null))
                {
                    this.mUIТолькопрошедшиеComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIТолькопрошедшиеComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Только прошедшие";
                    this.mUIТолькопрошедшиеComboBox.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIТолькопрошедшиеComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIВсеComboBox;
        
        private WinComboBox mUIТолькопрошедшиеComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_conditionCombo_EmbeWindow : WinWindow
    {
        
        public UI_conditionCombo_EmbeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_conditionCombo_EmbeddableTextBox";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_conditionCombo_EmbeEdit
        {
            get
            {
                if ((this.mUI_conditionCombo_EmbeEdit == null))
                {
                    this.mUI_conditionCombo_EmbeEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_conditionCombo_EmbeEdit.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_conditionCombo_EmbeEdit;
            }
        }
        
        public WinEdit UI_conditionCombo_EmbeEdit1
        {
            get
            {
                if ((this.mUI_conditionCombo_EmbeEdit1 == null))
                {
                    this.mUI_conditionCombo_EmbeEdit1 = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_conditionCombo_EmbeEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Все";
                    this.mUI_conditionCombo_EmbeEdit1.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUI_conditionCombo_EmbeEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_conditionCombo_EmbeEdit;
        
        private WinEdit mUI_conditionCombo_EmbeEdit1;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПолучитьданныеWindow : WinWindow
    {
        
        public UIПолучитьданныеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_getData";
            this.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
            #endregion
        }
        
        #region Properties
        public WinButton UIПолучитьданныеButton
        {
            get
            {
                if ((this.mUIПолучитьданныеButton == null))
                {
                    this.mUIПолучитьданныеButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПолучитьданныеButton.SearchProperties[WinButton.PropertyNames.Name] = "Получить данные";
                    this.mUIПолучитьданныеButton.WindowTitles.Add("Квазар - Журнал флюорографических обследований");
                    #endregion
                }
                return this.mUIПолучитьданныеButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПолучитьданныеButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_registryGridClient : WinClient
    {
        
        public UI_registryGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "_registryGrid";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UIResultTableTable UIResultTableTable
        {
            get
            {
                if ((this.mUIResultTableTable == null))
                {
                    this.mUIResultTableTable = new UIResultTableTable(this);
                }
                return this.mUIResultTableTable;
            }
        }
        #endregion
        
        #region Fields
        private UIResultTableTable mUIResultTableTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIResultTableTable : WinTable
    {
        
        public UIResultTableTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "ResultTable";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public UIResultTableстрока7Row UIResultTableстрока7Row
        {
            get
            {
                if ((this.mUIResultTableстрока7Row == null))
                {
                    this.mUIResultTableстрока7Row = new UIResultTableстрока7Row(this);
                }
                return this.mUIResultTableстрока7Row;
            }
        }
        #endregion
        
        #region Fields
        private UIResultTableстрока7Row mUIResultTableстрока7Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIResultTableстрока7Row : WinRow
    {
        
        public UIResultTableстрока7Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Name] = "ResultTable строка 7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinCell UIМоревРусланЕвгеньевиCell
        {
            get
            {
                if ((this.mUIМоревРусланЕвгеньевиCell == null))
                {
                    this.mUIМоревРусланЕвгеньевиCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIМоревРусланЕвгеньевиCell.SearchProperties[WinCell.PropertyNames.Value] = "Морев Руслан Евгеньевич";
                    this.mUIМоревРусланЕвгеньевиCell.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIМоревРусланЕвгеньевиCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIМоревРусланЕвгеньевиCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_pluginContainerWindow : WinWindow
    {
        
        public UI_pluginContainerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_pluginContainer";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIЖурналыButton
        {
            get
            {
                if ((this.mUIЖурналыButton == null))
                {
                    this.mUIЖурналыButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЖурналыButton.SearchProperties[WinButton.PropertyNames.Name] = "Журналы";
                    this.mUIЖурналыButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIЖурналыButton;
            }
        }
        
        public WinButton UISplitterBarButton
        {
            get
            {
                if ((this.mUISplitterBarButton == null))
                {
                    this.mUISplitterBarButton = new WinButton(this);
                    #region Условия поиска
                    this.mUISplitterBarButton.SearchProperties[WinButton.PropertyNames.Name] = "Splitter Bar";
                    this.mUISplitterBarButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUISplitterBarButton;
            }
        }
        
        public WinButton UIСистемаправButton
        {
            get
            {
                if ((this.mUIСистемаправButton == null))
                {
                    this.mUIСистемаправButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСистемаправButton.SearchProperties[WinButton.PropertyNames.Name] = "Система прав";
                    this.mUIСистемаправButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIСистемаправButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЖурналыButton;
        
        private WinButton mUISplitterBarButton;
        
        private WinButton mUIСистемаправButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIMedSoftRegistriesWindow : WinWindow
    {
        
        public UIMedSoftRegistriesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MedSoft.Registries";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIОбследованияButton
        {
            get
            {
                if ((this.mUIОбследованияButton == null))
                {
                    this.mUIОбследованияButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОбследованияButton.SearchProperties[WinButton.PropertyNames.Name] = "Обследования";
                    this.mUIОбследованияButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIОбследованияButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОбследованияButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = " ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UI_userNameWindow UI_userNameWindow
        {
            get
            {
                if ((this.mUI_userNameWindow == null))
                {
                    this.mUI_userNameWindow = new UI_userNameWindow(this);
                }
                return this.mUI_userNameWindow;
            }
        }
        
        public UI_userName_EmbeddableWindow UI_userName_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_userName_EmbeddableWindow == null))
                {
                    this.mUI_userName_EmbeddableWindow = new UI_userName_EmbeddableWindow(this);
                }
                return this.mUI_userName_EmbeddableWindow;
            }
        }
        
        public UI_passwordWindow UI_passwordWindow
        {
            get
            {
                if ((this.mUI_passwordWindow == null))
                {
                    this.mUI_passwordWindow = new UI_passwordWindow(this);
                }
                return this.mUI_passwordWindow;
            }
        }
        
        public UI_password_EmbeddableWindow UI_password_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_password_EmbeddableWindow == null))
                {
                    this.mUI_password_EmbeddableWindow = new UI_password_EmbeddableWindow(this);
                }
                return this.mUI_password_EmbeddableWindow;
            }
        }
        
        public UIВойтиWindow UIВойтиWindow
        {
            get
            {
                if ((this.mUIВойтиWindow == null))
                {
                    this.mUIВойтиWindow = new UIВойтиWindow(this);
                }
                return this.mUIВойтиWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_userNameWindow mUI_userNameWindow;
        
        private UI_userName_EmbeddableWindow mUI_userName_EmbeddableWindow;
        
        private UI_passwordWindow mUI_passwordWindow;
        
        private UI_password_EmbeddableWindow mUI_password_EmbeddableWindow;
        
        private UIВойтиWindow mUIВойтиWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_userNameWindow : WinWindow
    {
        
        public UI_userNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_userName";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_userName_EmbeddableWindow : WinWindow
    {
        
        public UI_userName_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_userName_EmbeddableTextBox";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_userName_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_userName_EmbeddableEdit == null))
                {
                    this.mUI_userName_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_userName_EmbeddableEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUI_userName_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_userName_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_passwordWindow : WinWindow
    {
        
        public UI_passwordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_password";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_password_EmbeddableWindow : WinWindow
    {
        
        public UI_password_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_password_EmbeddableTextBox";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_password_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_password_EmbeddableEdit == null))
                {
                    this.mUI_password_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_password_EmbeddableEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUI_password_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_password_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВойтиWindow : WinWindow
    {
        
        public UIВойтиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_acceptButton";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinButton UIВойтиButton
        {
            get
            {
                if ((this.mUIВойтиButton == null))
                {
                    this.mUIВойтиButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВойтиButton.SearchProperties[WinButton.PropertyNames.Name] = "Войти";
                    this.mUIВойтиButton.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIВойтиButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВойтиButton;
        #endregion
    }
}
